[{"id":"9611f283.d5b6d8","type":"ibmiot","name":"Node"},{"id":"96d28549.acda7","type":"ibmiot","name":"Node"},{"id":"634e195.af361e8","type":"ibmiot","z":"6ef60287.c72cbc","name":"IOT Starter Android"},{"id":"bdbf9dfd.70f33","type":"websocket-listener","z":"","path":"/ws/location","wholemsg":"false"},{"id":"cf208a73.c21d68","type":"http in","z":"81673aed.b2ffc","name":"","url":"/app","method":"get","swaggerDoc":"","x":211.73333740234375,"y":116.69999694824219,"wires":[["c71f661a.e99d58"]]},{"id":"c71f661a.e99d58","type":"template","z":"81673aed.b2ffc","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"\n<!DOCTYPE html>\n<html>\n<body>\n\n<form action=\"/store_data_in_cloudant\" METHOD=POST>\n  First name:<br>\n  <input type=\"text\" name=\"firstname\" value=\"Mickey\">\n  <br>\n  Last name:<br>\n  <input type=\"text\" name=\"lastname\" value=\"Mouse\">\n  <br><br>\n  <input type=\"submit\" value=\"Submit\">\n</form> \n\n<p>If you click the \"Submit\" button, the form-data will be sent to a page called \"action_page.php\".</p>\n\n</body>\n</html>","x":371.73333740234375,"y":117.83332824707031,"wires":[["4091704a.9f1e6"]]},{"id":"4091704a.9f1e6","type":"http response","z":"81673aed.b2ffc","name":"","x":518.7333679199219,"y":116.03334045410156,"wires":[]},{"id":"712d307d.fd1f38","type":"http in","z":"81673aed.b2ffc","name":"","url":"/store_data_in_cloudant","method":"post","swaggerDoc":"","x":216.36666870117188,"y":222.36666870117188,"wires":[["411a031a.778b0c","b184bf37.7c11c","b3edb0a1.d210c8"]]},{"id":"a386387a.2cc718","type":"http response","z":"81673aed.b2ffc","name":"","x":586.36669921875,"y":351.70001220703125,"wires":[]},{"id":"8cfdd4e6.a4ee1","type":"cloudant out","z":"81673aed.b2ffc","service":"kad-node-red-starter-cloudantNoSQLDB","cloudant":"","name":"","database":"patient","payonly":true,"operation":"insert","x":809.7333984375,"y":191.06668090820312,"wires":[]},{"id":"b184bf37.7c11c","type":"debug","z":"81673aed.b2ffc","name":"","active":true,"console":"false","complete":"false","x":785.7333984375,"y":284.5666809082031,"wires":[]},{"id":"411a031a.778b0c","type":"function","z":"81673aed.b2ffc","name":"Prepare JSON for Database","func":"msg.payload = msg.req.body\n\nreturn msg;","outputs":1,"noerr":0,"x":572.7333679199219,"y":193.56668090820312,"wires":[["8cfdd4e6.a4ee1","b184bf37.7c11c"]]},{"id":"b3edb0a1.d210c8","type":"template","z":"81673aed.b2ffc","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Thanks for entering in patient data\n\nThis is the payload: {{msg.req.body}} !","x":405.73333740234375,"y":302.8333435058594,"wires":[["a386387a.2cc718"]]},{"id":"854e30f8.07f358","type":"websocket out","z":"81673aed.b2ffc","name":"","server":"bdbf9dfd.70f33","client":"","x":733.5,"y":696.36669921875,"wires":[]},{"id":"301351b8.8a46fe","type":"websocket in","z":"81673aed.b2ffc","name":"","server":"bdbf9dfd.70f33","client":"","x":280.5,"y":695.3666839599609,"wires":[["2fc152d5.72422e"]]},{"id":"2fc152d5.72422e","type":"function","z":"81673aed.b2ffc","name":"Get Global context","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n\nmsg.payload = context.global.location;\nreturn msg;","outputs":1,"noerr":0,"x":488.5,"y":695.3667297363281,"wires":[["854e30f8.07f358"]]},{"id":"a4679734.82de78","type":"template","z":"81673aed.b2ffc","name":"HTML output","field":"","template":"<!DOCTYPE html>\n<html>\n\n<head>\n    <title>BlueMix Sentiment Twitter Map</title>\n    <script src=\"http://use.edgefonts.net/antic-didone:n4:all.js\"></script>\n    <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=true\"></script>\n    <script type=\"text/javascript\" src=\"http://yourjavascript.com/4594301102/gmaps.js\"></script>\n    <script type=\"text/javascript\" src=\"http://yourjavascript.com/190225905/autolinker-min.js\"></script>\n    <style type=\"text/css\" media=\"screen\">\n        #map {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n        \n        #content {\n            font-size: 10px;\n        }\n        \n        p {\n            font-family: verdana;\n            text-align: center\n        }\n        \n        .maptitle {\n            position: absolute;\n            border-radius: 10px;\n            top: .3em;\n            right: .3em;\n            color: white;\n            background: black;\n            opacity: 0.7;\n            padding: 0 10px;\n        }\n        \n        .titletext {\n            font-family: antic-didone;\n            font-size: 3em;\n            font-weight: 100;\n            margin-top: 0;\n            margin-bottom: 0;\n            line-height: 1em;\n        }\n        \n        .subtitle {\n            color: darkolivegreen;\n            font-size: .8em;\n            line-height: .3em;\n            vertical-align: middle;\n        }\n        \n        .credit {\n            position: absolute;\n            bottom: 0;\n            left: 10em;\n            font-size: .6em;\n            color: #222;\n        }\n        \n        .legend {\n            font-size: .6em;\n            color: #000;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div id=\"map\"></div>\n    <div class=maptitle>\n        <p class=titletext>Tweet Legend</p>\n        <div class=subtitle>\n            <p>Sentiment (negative to positive)</p>\n        </div>\n        <div class=legend>\n            <p>Sentiment:\n                <br>\n                    <img src=\"http://tirdagiot2.mybluemix.net/site-images/tweet-r2.png\">\n                    <img src=\"http://tirdagiot2.mybluemix.net/site-images/tweet-r1.png\">\n                    <img src=\"http://tirdagiot2.mybluemix.net/site-images/tweet-w.png\">\n                    <img src=\"http://tirdagiot2.mybluemix.net/site-images/tweet-g1.png\">\n                    <img src=\"http://tirdagiot2.mybluemix.net/site-images/tweet-g2.png\">\n                </p>\n        </div>\n    </div>\n    <div class=credit>\n        <p>Originally written by Tiran Dagan, IBM October 2015\n           <br>\n           Enhanced by the BlueMix Technical Team, IBM January, 2016</p>\n    </div>\n    <script type=\"text/javascript\">\n        var geocoder = new google.maps.Geocoder();\n        var autolinker = new Autolinker( {\n            newWindow : true,\n            truncate  : 30\n        } );\n        \n        var socketaddy = \"ws://{{req.headers.host}}/ws/location\";\n        var map;\n        var sock;\n        $(document).ready(function()\n        {\n            // Houston Lat Long in Degrees\n            // Latitude: 29.7632836\n            // Longitude: -95.3632715 \n            map = new GMaps({\n                div: '#map',\n                //lat: -12.043333,\n                //lng: -77.028333,\n                lat: 29.7632836,\n                lng: -95.3632715,\n                minZoom: 3\n            });\n            \n            // Use HTML5 geolocation if user allows it.\n            if (navigator.geolocation)\n            {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n\n                    map.setCenter(pos);\n                });\n            }\n\n            \n            map.setZoom (3);\n      \n            sock = new WebSocket(socketaddy);\n            sock.onopen = function()\n            {\n                console.log(\"WebSocket - Connected\");\n                console.log(\"WebSocket - Sending ping\");\n                sock.send(\"Ping.\");\n                console.log(\"WebSocket - Ping sent\");\n            };\n            sock.onerror = function()\n            {\n                console.log(\"WebSocket - Error\");\n            };\n            sock.onmessage = function(evt)\n            {\n                var msgparse = JSON.parse(evt.data);\n                console.log (\"User: @\" + msgparse.user);\n                console.log (msgparse.location );\n                \n                GMaps.geocode({\n                    address: msgparse.location,\n                    callback: function(results, status)\n                    {\n                        if (status == 'OK')\n                        {\n                            var latlng = results[0].geometry.location;\n                            // map.removeMarkers();\n                           \t// map.setCenter(latlng[0].lat, latlng[0].lng);\n                            // Create marker\n                            var infoWindow = new google.maps.InfoWindow({ \n                                content: '<b>heading</b><br>more text'\n                            });\n                    \n                            var infoText = '<b>@' + msgparse.user + ':</b>&nbsp;' + \n                                           '<div id=content>' + msgparse.tweet + '</div>'\n                            var html = autolinker.link( infoText );\n                            \n                            // Sets the Default Tweet Icon\n                            var iconfile = 'http://tirdagiot2.mybluemix.net/site-images/tweet';\n                            var sentimentScore = msgparse.sentiment.score == \"\" ? 0 : parseFloat (msgparse.sentiment.score);\n            \n                            // User NodeRed Sentiment\n                            if (sentimentScore < -6.0) \n                                iconfile += '-r2';\n                            else if (sentimentScore < -2.0)\n                                iconfile += '-r1';\n                            else if (sentimentScore >= -2.0 && sentimentScore < 2.0)\n                                iconfile += '-w';\n                            else if (sentimentScore >= 2.0 && sentimentScore < 6.0)\n                                iconfile += '-g1';\n                            else if (sentimentScore >= 6.0)\n                                iconfile += '-g2';\n            \n                            iconfile += '.png';\n                            console.log ('sentiment ' + JSON.stringify(msgparse.sentiment) + ' score: ' + sentimentScore);\n                            console.log ('--> icon=' + iconfile);\n                            var marker = map.addMarker({\n                                lat: latlng.lat(),\n                                lng: latlng.lng(),\n                                title: msgparse.user,\n                                infoWindow: {\n                                    content: html,\n                                    maxWidth: 300\n                                },\n                                icon: iconfile\n                            });\n                            console.log (\"added marker: \" + marker.title);\n                            // map.setCenter(latlng.lat(), latlng.lng());\n                        }\n                        else\n                        {\n                            console.log (\"GMaps.geocode unsuccessful\");\n                        }\n                    }\n                });\n                console.log (msgparse.tweet);\n            }\n        });\n    </script>\n</body>\n\n</html>","x":492.772705078125,"y":771.6394348144531,"wires":[["be33a6de.d322c8"]]},{"id":"be33a6de.d322c8","type":"http response","z":"81673aed.b2ffc","name":"","x":678.4999732971191,"y":771.3666706085205,"wires":[]},{"id":"7d7c688c.e907f8","type":"http in","z":"81673aed.b2ffc","name":"","url":"/map","method":"get","swaggerDoc":"","x":272.50000381469727,"y":771.3666706085205,"wires":[["a4679734.82de78"]]},{"id":"4f7c3730.df991","type":"twitter in","z":"81673aed.b2ffc","twitter":"","tags":"Trump","user":"dm","name":"Get Tweets","topic":"tweets","x":91,"y":534.5666198730469,"wires":[["55778f26.1bbd68","892387cd.ec2e8"]]},{"id":"d4f03f4.0b76bc","type":"function","z":"81673aed.b2ffc","name":"Load map json","func":"// Alchemy Method\n//var sentiment;\n//if (msg.features === undefined)  \n//    sentiment = \"\"\n//else\n//    sentiment =  msg.features[\"doc-sentiment\"];\n\n// NodeRed Sentiment Method\nvar sentiment = msg.sentiment;  //.score\n\nvar msg2 = { payload : {\n\t\tuser: msg.tweet.user.screen_name,\n\t\tlocation: msg.location === undefined ? \"\" : msg.location.place,\n\t\tlang : msg.lang,\n\t\tsentiment: sentiment,\n\t\ttweet: msg.tweet.text}\n\t};\n\n// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\ncontext.global.location = msg2.payload;\nreturn msg2;\n","outputs":1,"noerr":0,"x":478.50001525878906,"y":622.5666351318359,"wires":[["854e30f8.07f358"]]},{"id":"55778f26.1bbd68","type":"function","z":"81673aed.b2ffc","name":"Set Payload=Tweet","func":"msg.payload = msg.tweet.text;\nreturn msg;","outputs":1,"noerr":0,"x":287.70001220703125,"y":534.7666320800781,"wires":[["9d3fd739.bc9498"]]},{"id":"74aa2776.7674c8","type":"cloudant out","z":"81673aed.b2ffc","service":"kad-node-red-starter-cloudantNoSQLDB","cloudant":"","name":"store tweet","database":"tweet_map","payonly":false,"operation":"insert","x":833.5,"y":533.5666198730469,"wires":[]},{"id":"b1d90451.57d3d8","type":"function","z":"81673aed.b2ffc","name":"set _id","func":"msg._id = msg.tweet.id_str\nreturn msg;","outputs":1,"noerr":0,"x":664.5,"y":533.5666198730469,"wires":[["74aa2776.7674c8"]]},{"id":"892387cd.ec2e8","type":"debug","z":"81673aed.b2ffc","name":"DEBUG","active":false,"console":"false","complete":"payload","x":287.5,"y":468.5666198730469,"wires":[]},{"id":"9d3fd739.bc9498","type":"sentiment","z":"81673aed.b2ffc","name":"","x":481,"y":534.5666198730469,"wires":[["d4f03f4.0b76bc","b1d90451.57d3d8","30b9b6c7.6c606a"]]},{"id":"30b9b6c7.6c606a","type":"debug","z":"81673aed.b2ffc","name":"DEBUG","active":false,"console":"false","complete":"sentiment.score","x":676,"y":478.5666198730469,"wires":[]},{"id":"36052003.9d71","type":"comment","z":"81673aed.b2ffc","name":"SIMPLE HTML FORM WITH CORRESPONDING POST","info":"","x":258.73333740234375,"y":50.76666259765625,"wires":[]},{"id":"57863764.014a68","type":"comment","z":"81673aed.b2ffc","name":"TWITTER MAP","info":"","x":127.73333740234375,"y":385.76666259765625,"wires":[]},{"id":"24a8be68.f5c5d2","type":"comment","z":"81673aed.b2ffc","name":"IoT Starter (Android IOS) accel to color flow","info":"","x":296.3666687011719,"y":917.666748046875,"wires":[]},{"id":"3f0982e9.8fab5e","type":"ibmiot in","z":"81673aed.b2ffc","authentication":"boundService","apiKey":"634e195.af361e8","inputType":"evt","deviceId":"iot-starter-android","applicationId":"","deviceType":"Android","eventType":"+","commandType":"","format":"json","name":"IBM IoT App In","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":false,"allEvents":false,"allCommands":true,"allFormats":false,"x":213.36666870117188,"y":1069.666748046875,"wires":[["debedaf4.6dbd48","4078aab4.da177c","6594fa9c.8f20e4"]]},{"id":"debedaf4.6dbd48","type":"function","z":"81673aed.b2ffc","name":"Handle accel","func":"//msg.deviceId = msg.payload.d.deviceId;\n//msg.deviceType = \"Android\";//msg.payload.d.deviceType;\n//msg.format = \"json\";\n\nvar accelZ = msg.payload.d.acceleration_z;\nvar r = 0.0;\nvar b = 0.0;\nvar g = 0.0;\nif (accelZ > 0) {\n\tg = 255.0;\n} else if (accelZ < 0) {\n\tr = 255.0;\n} else {\n\tr = 104;\n\tg = 109;\n\tb = 115;\n}\na = 1.0;\n\t\nmsg.eventOrCommandType = \"color\";\n//msg.payload = JSON.stringify({\"d\":{\"deviceId\":msg.deviceId, \"r\":r,\"b\":b,\"g\":g,\"alpha\":a}});\nmsg.payload = JSON.stringify({\"d\":{\"r\":r,\"b\":b,\"g\":g,\"alpha\":a}});\n\nreturn msg;","outputs":1,"noerr":0,"x":419.4576110839844,"y":1069.666732788086,"wires":[["6431ec9b.38f544"]]},{"id":"6431ec9b.38f544","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"634e195.af361e8","outputType":"cmd","deviceId":"iot-starter-android","deviceType":"Android","eventCommandType":"color","format":"json","data":"{\"d\":{\"value\":\"text\"}}","name":"IBM IoT App Out","service":"registered","x":619.3667297363281,"y":1069.666748046875,"wires":[]},{"id":"4078aab4.da177c","type":"debug","z":"81673aed.b2ffc","name":"","active":true,"console":"false","complete":"payload","x":429.63940152254963,"y":1167.7576238458807,"wires":[]},{"id":"ffb52cc.e3044d","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"634e195.af361e8","outputType":"cmd","deviceId":"iot-starter-android","deviceType":"Android","eventCommandType":"light","format":"json","data":"{\"d\":{\"empty\":0}}","name":"IBM IoT App Out","service":"registered","x":563.5484924316406,"y":1255.5758056640625,"wires":[]},{"id":"52b07354.302c74","type":"inject","z":"81673aed.b2ffc","name":"Turn Light On and Off","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"x":250.54849243164062,"y":1254.5758056640625,"wires":[["ffb52cc.e3044d"]]},{"id":"ab483358.71fc88","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"634e195.af361e8","outputType":"cmd","deviceId":"iot-starter-android","deviceType":"Android","eventCommandType":"alert","format":"json","data":"{\"d\":{\"text\":\"This is Node Red Speaking\"}}","name":"IBM IoT App Out","service":"registered","x":559.5484924316406,"y":1317.5758056640625,"wires":[]},{"id":"4497574d.30ceb","type":"inject","z":"81673aed.b2ffc","name":"Send Phone Text Alert","topic":"","payload":"","payloadType":"none","repeat":"","crontab":"","once":false,"x":252.54849243164062,"y":1318.5758056640625,"wires":[["ab483358.71fc88"]]},{"id":"6594fa9c.8f20e4","type":"function","z":"81673aed.b2ffc","name":"Retransmit as a command","func":"msg.eventType = null;\nmsg.deviceId = \"iot-starter-android\";\n//msg.deviceType = \"Android\";//msg.payload.d.deviceType;\n//msg.format = \"json\";\n\nvar lat = msg.payload.d.lat;\nvar lon = msg.payload.d.lon;\nvar user = msg.payload.d.user;\n\n\t\nmsg.eventOrCommandType = \"position\";\nmsg.payload = JSON.stringify({\"d\":{\"user\": user, \"lat\":lat,\"lon\":lon}});\n\nreturn msg;","outputs":1,"noerr":0,"x":476.9151611328125,"y":972.9424743652344,"wires":[["c38ff1ed.f421b8","967a047.e4a4ef8"]]},{"id":"c38ff1ed.f421b8","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"634e195.af361e8","outputType":"cmd","deviceId":"iot-starter-android","deviceType":"Android","eventCommandType":"position","format":"json","data":"{\"d\":{\"value\":\"text\"}}","name":"IBM IoT App Out","service":"registered","x":804.8243713378906,"y":972.9424896240234,"wires":[]},{"id":"967a047.e4a4ef8","type":"debug","z":"81673aed.b2ffc","name":"","active":true,"console":"false","complete":"true","x":747.2818603515625,"y":1029.4091339111328,"wires":[]},{"id":"36015393.36cb2c","type":"http in","z":"81673aed.b2ffc","name":"","url":"/merchant","method":"get","swaggerDoc":"","x":226.36666870117188,"y":1568.333251953125,"wires":[["c9b0e4fd.084c8","66eb04a0.e1aaa4","323fe27b.1558ae"]]},{"id":"35eb5f7c.eb2098","type":"http response","z":"81673aed.b2ffc","name":"","x":843.36669921875,"y":1551.333251953125,"wires":[]},{"id":"c9b0e4fd.084c8","type":"debug","z":"81673aed.b2ffc","name":"","active":false,"console":"false","complete":"true","x":687.36669921875,"y":1650.333251953125,"wires":[]},{"id":"66eb04a0.e1aaa4","type":"function","z":"81673aed.b2ffc","name":"Query on Name","func":"msg.payload = {\"merchant_name\":msg.req.query.merchant_name}\nreturn msg;","outputs":1,"noerr":0,"x":501.3666687011719,"y":1560.333251953125,"wires":[["c9b0e4fd.084c8","28bd8398.1498cc"]]},{"id":"323fe27b.1558ae","type":"function","z":"81673aed.b2ffc","name":"Generate Logging Data","func":"msg.payload = JSON.stringify(\n    {\"d\":\n    {\"GP_ACTION\":\"Get Merchant By Name\",\n    \"IP_ADDRESS\":msg.req.get(\"x-client-ip\"),\n    \"TS\":new Date(),\n    \"ADDITIONAL_INFO\":msg.req.query.merchant_name,\n    \"TRANSACTION_ID\": msg.req.get(\"x-global-transaction-id\")\n    \n    }});\n//msg.xxx =\n//{\n//    GP_ACTION:\"Authorize Transaction\",\n//    TS:'TIMESTAMP',\n//    //IP_ADDRESS: msg.req.connection['$wsra'],\n//    IP_ADDRESS:'',\n//    ADDITIONAL_INFO:''\n//};\nreturn msg;","outputs":1,"noerr":0,"x":510.3666687011719,"y":1477.6999206542969,"wires":[["9ab3c6a9.35e518"]]},{"id":"9ab3c6a9.35e518","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"96d28549.acda7","outputType":"evt","deviceId":"GP_LOG","deviceType":"LOG_DRAIN","eventCommandType":"logs","format":"json","data":"\"d\":{\"myName\":\"THIS DOESNT DO ANYTHING\", \"temperature\":989}} ","name":"IBM IoT","service":"registered","x":729.8243408203125,"y":1477.551368713379,"wires":[]},{"id":"28bd8398.1498cc","type":"dashDB in","z":"81673aed.b2ffc","service":"dashDB-25","query":"select * from merchant where merchant_name = ? limit 0,1","params":"msg.payload.merchant_name","name":"","x":684.7333679199219,"y":1558.1998596191406,"wires":[["35eb5f7c.eb2098"]]},{"id":"d93f2bd6.a2f0c8","type":"delay","z":"81673aed.b2ffc","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":599.36669921875,"y":1763.551399230957,"wires":[["d3755ed8.a96fb8","990992c5.ac85e8"]]},{"id":"d3755ed8.a96fb8","type":"delay","z":"81673aed.b2ffc","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":707.36669921875,"y":1847.5514297485352,"wires":[["c9114917.ec36f8","c4039610.c2abe"]]},{"id":"c9114917.ec36f8","type":"delay","z":"81673aed.b2ffc","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":881.36669921875,"y":1946.551399230957,"wires":[["7889da2f.78a8bc","9426ceb1.d37d58","dd2419c2.006ff8"]]},{"id":"587e7fb7.92bbf","type":"http in","z":"81673aed.b2ffc","name":"","url":"/onboard_merchant","method":"post","swaggerDoc":"","x":184.5,"y":1777.551399230957,"wires":[["b76c12e1.bcf0b8","65177125.b25508"]]},{"id":"f18f37be.7c87c8","type":"http response","z":"81673aed.b2ffc","name":"","x":685.36669921875,"y":1705.551368713379,"wires":[]},{"id":"b76c12e1.bcf0b8","type":"template","z":"81673aed.b2ffc","name":"Create HTTP Response ","field":"payload","format":"handlebars","template":"{\"result\":\"received\"}","x":469.3666687011719,"y":1704.551368713379,"wires":[["f18f37be.7c87c8"]]},{"id":"65177125.b25508","type":"function","z":"81673aed.b2ffc","name":"Add Some Fields","func":"msg.payload.merchant_status=\"Pending\";\nmsg.payload.unique_id= \"\" + Math.random()\n + \"\";\nmsg.payload._id = msg.payload.unique_id;\nmsg.payload.ip_address = msg.req.get(\"x-client-ip\");\nmsg.payload.transaction_id = msg.req.get(\"x-global-transaction-id\");\n\n\n return msg;","outputs":1,"noerr":0,"x":421.3666687011719,"y":1772.551368713379,"wires":[["a8ac2e9b.a6f65","d93f2bd6.a2f0c8","f94225c8.d1c388","a34b45df.baddb"]]},{"id":"79d3bac2.051a34","type":"function","z":"81673aed.b2ffc","name":"","func":"//if (msg.payload.len > 0)\n//    msg.payload = msg.payload[0];\nvar max = 5;\nvar min = 0;\nvar i = Math.floor(Math.random() * max);\nvar rand = i < min ? min: i;\n   \nvar result = [\"Active\",\"Active\",\"Active\",\"Rejected\",\"Rejected\"];\nmsg.payload.merchant_status=result[rand];\nmsg.payload.merchant_id= Math.round(Math.random() * 1000000);\nvar today = new Date();\nvar formatted_date = today.toISOString();//.substring(0, 10);\nmsg.payload.onboard_completion_date = formatted_date;\nreturn msg;","outputs":1,"noerr":0,"x":1229.36669921875,"y":2020.484718322754,"wires":[["9426ceb1.d37d58","87a9cfe9.8c6588","5ff4947a.a7df54"]]},{"id":"a8ac2e9b.a6f65","type":"debug","z":"81673aed.b2ffc","name":"","active":false,"console":"false","complete":"payload","x":616.36669921875,"y":1945.5513381958008,"wires":[]},{"id":"9426ceb1.d37d58","type":"debug","z":"81673aed.b2ffc","name":"","active":false,"console":"false","complete":"false","x":1504.199951171875,"y":2089.817970275879,"wires":[]},{"id":"7889da2f.78a8bc","type":"cloudant in","z":"81673aed.b2ffc","service":"Cloudant NoSQL DB-MERCHANT","cloudant":"","name":"","database":"merchant","search":"_id_","design":"","index":"","x":1120.25,"y":2124.801368713379,"wires":[["79d3bac2.051a34","9426ceb1.d37d58"]]},{"id":"990992c5.ac85e8","type":"function","z":"81673aed.b2ffc","name":"","func":"msg.payload = JSON.stringify(\n    {\"d\":\n    {\"GP_ACTION\":\"BP Process 1 Finished\",\n    \"IP_ADDRESS\":msg.payload.ip_address,\n    \"TS\":new Date(),\n    \"ADDITIONAL_INFO\":msg.payload.merchant_name + ' - ' + msg.payload.unique_id,\n    \"TRANSACTION_ID\":msg.payload.transaction_id\n    \n    }});\n//msg.xxx =\n//{\n//    GP_ACTION:\"Authorize Transaction\",\n//    TS:'TIMESTAMP',\n//    //IP_ADDRESS: msg.req.connection['$wsra'],\n//    IP_ADDRESS:'',\n//    ADDITIONAL_INFO:''\n//};\nreturn msg;","outputs":1,"noerr":0,"x":854.36669921875,"y":1762.3846817016602,"wires":[["c858ab80.90481"]]},{"id":"c858ab80.90481","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"9611f283.d5b6d8","outputType":"evt","deviceId":"GP_LOG","deviceType":"LOG_DRAIN","eventCommandType":"logs","format":"json","data":"\"d\":{\"myName\":\"THIS DOESNT DO ANYTHING\", \"temperature\":989}} ","name":"IBM IoT","service":"registered","x":1025.7333984375,"y":1762.4179458618164,"wires":[]},{"id":"c4039610.c2abe","type":"function","z":"81673aed.b2ffc","name":"","func":"msg.payload = JSON.stringify(\n    {\"d\":\n    {\"GP_ACTION\":\"BP Process 2 Finished\",\n    \"IP_ADDRESS\":msg.payload.ip_address,\n    \"TS\": new Date(),\n    \"ADDITIONAL_INFO\":msg.payload.merchant_name + ' - ' + msg.payload.unique_id,\n    \"TRANSACTION_ID\":msg.payload.transaction_id\n\n        \n    }});\n//msg.xxx =\n//{\n//    GP_ACTION:\"Authorize Transaction\",\n//    TS:'TIMESTAMP',\n//    //IP_ADDRESS: msg.req.connection['$wsra'],\n//    IP_ADDRESS:'',\n//    ADDITIONAL_INFO:''\n//};\nreturn msg;","outputs":1,"noerr":0,"x":886.2333374023438,"y":1849.3846817016602,"wires":[["ba122865.53a82"]]},{"id":"ba122865.53a82","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"9611f283.d5b6d8","outputType":"evt","deviceId":"GP_LOG","deviceType":"LOG_DRAIN","eventCommandType":"logs","format":"json","data":"\"d\":{\"myName\":\"THIS DOESNT DO ANYTHING\", \"temperature\":989}} ","name":"IBM IoT","service":"registered","x":1057.6000366210938,"y":1849.4179458618164,"wires":[]},{"id":"dd2419c2.006ff8","type":"function","z":"81673aed.b2ffc","name":"","func":"msg.payload = JSON.stringify(\n    {\"d\":\n    {\"GP_ACTION\":\"BP Process 3 Finished\",\n    \"IP_ADDRESS\":msg.payload.ip_address,\n    \"TS\":new Date(),\n    \"ADDITIONAL_INFO\":msg.payload.merchant_name + ' - ' + msg.payload.unique_id,\n    \"TRANSACTION_ID\":msg.payload.transaction_id\n        \n    }});\n//msg.xxx =\n//{\n//    GP_ACTION:\"Authorize Transaction\",\n//    TS:'TIMESTAMP',\n//    //IP_ADDRESS: msg.req.connection['$wsra'],\n//    IP_ADDRESS:'',\n//    ADDITIONAL_INFO:''\n//};\nreturn msg;","outputs":1,"noerr":0,"x":1111.2333374023438,"y":1945.384620666504,"wires":[["f46f1a2b.369808"]]},{"id":"f46f1a2b.369808","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"9611f283.d5b6d8","outputType":"evt","deviceId":"GP_LOG","deviceType":"LOG_DRAIN","eventCommandType":"stats","format":"json","data":"\"d\":{\"myName\":\"THIS DOESNT DO ANYTHING\", \"temperature\":989}} ","name":"IBM IoT","service":"registered","x":1282.6000366210938,"y":1945.4178848266602,"wires":[]},{"id":"f94225c8.d1c388","type":"function","z":"81673aed.b2ffc","name":"","func":"msg.payload = JSON.stringify(\n    {\"d\":\n    {\"GP_ACTION\":\"BPM Process Onboard Merchant Received\",\n    \"IP_ADDRESS\":msg.payload.ip_address ,\n    \"TS\": new Date(),\n    \"ADDITIONAL_INFO\":msg.payload.merchant_name + ' - ' + msg.payload.unique_id,\n    \"TRANSACTION_ID\":msg.payload.transaction_id\n        \n    }});\n//msg.xxx =\n//{\n//    GP_ACTION:\"Authorize Transaction\",\n//    TS:'TIMESTAMP',\n//    //IP_ADDRESS: msg.req.connection['$wsra'],\n//    IP_ADDRESS:'',\n//    ADDITIONAL_INFO:''\n//};\nreturn msg;","outputs":1,"noerr":0,"x":500.2333068847656,"y":2027.3845596313477,"wires":[["9e91ccff.01ba78"]]},{"id":"9e91ccff.01ba78","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"9611f283.d5b6d8","outputType":"evt","deviceId":"GP_LOG","deviceType":"LOG_DRAIN","eventCommandType":"logs","format":"json","data":"\"d\":{\"myName\":\"THIS DOESNT DO ANYTHING\", \"temperature\":989}} ","name":"IBM IoT","service":"registered","x":671.6000061035156,"y":2027.417823791504,"wires":[]},{"id":"87a9cfe9.8c6588","type":"function","z":"81673aed.b2ffc","name":"","func":"msg.payload = JSON.stringify(\n    {\"d\":\n    {\"GP_ACTION\":\"BPM Process Completed\",\n    \"IP_ADDRESS\":msg.payload.ip_address,\n    \"TS\":new Date(),\n    \"ADDITIONAL_INFO\": 'Merchant Name = ' + msg.payload.merchant_name + ' - Unique ID = ' + msg.payload.unique_id + ' - Merchant ID = ' + msg.payload.merchant_id + ' - Merchant Status = ' + msg.payload.merchant_status,\n    \"TRANSACTION_ID\":msg.payload.transaction_id\n\n        \n    }});\n//msg.xxx =\n//{\n//    GP_ACTION:\"Authorize Transaction\",\n//    TS:'TIMESTAMP',\n//    //IP_ADDRESS: msg.req.connection['$wsra'],\n//    IP_ADDRESS:'',\n//    ADDITIONAL_INFO:''\n//};\nreturn msg;","outputs":1,"noerr":0,"x":1474.066650390625,"y":2143.384620666504,"wires":[["5ceb9435.d7fdc4"]]},{"id":"5ceb9435.d7fdc4","type":"ibmiot out","z":"81673aed.b2ffc","authentication":"apiKey","apiKey":"9611f283.d5b6d8","outputType":"evt","deviceId":"GP_LOG","deviceType":"LOG_DRAIN","eventCommandType":"logs","format":"json","data":"\"d\":{\"myName\":\"THIS DOESNT DO ANYTHING\", \"temperature\":989}} ","name":"IBM IoT","service":"registered","x":1645.433349609375,"y":2143.41788482666,"wires":[]},{"id":"a34b45df.baddb","type":"cloudant out","z":"81673aed.b2ffc","service":"kad-node-red-starter-cloudantNoSQLDB","cloudant":"","name":"","database":"merchant","payonly":true,"operation":"insert","x":603.7333679199219,"y":1905.3847122192383,"wires":[]},{"id":"5ff4947a.a7df54","type":"cloudant out","z":"81673aed.b2ffc","service":"kad-node-red-starter-cloudantNoSQLDB","cloudant":"","name":"","database":"merchant","payonly":true,"operation":"insert","x":1434.7333679199219,"y":2008.3847122192383,"wires":[]},{"id":"c99e0d42.4d3b","type":"comment","z":"81673aed.b2ffc","name":"BUILDING APIs in Node-RED","info":"","x":205.73333740234375,"y":1420.7666625976562,"wires":[]}]
